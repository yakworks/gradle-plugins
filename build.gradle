// First, apply the publishing plugin
buildscript {
  repositories {
    mavenLocal()        // for downstream test
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "org.yakworks:gradle-plugins:1.1.8"
  }
}

plugins {
  id "com.dorongold.task-tree" version "1.3"
  id "com.gradle.plugin-publish" version "0.10.1"
  id "java-gradle-plugin"
}

apply plugin: 'yakworks.gradle-plugin'

//apply plugin: 'groovy'
//apply plugin: 'org.shipkit.gradle-plugin'
//group = 'org.yakworks'

//apply plugin: 'com.gradle.plugin-publish'
//apply plugin: 'spring.lock' //run gradle updateLocks

repositories {
  jcenter()
  maven { url "https://plugins.gradle.org/m2/" }
}

//run `gradle updateLocks` to update the locks below to highest version when using the + notation
dependencies {
  // gradle
  compile gradleApi()
  compile localGroovy()

  //runtime 'org.ajoberstar.grgit:grgit-gradle:3.1.1'
  //runtime 'org.ajoberstar:gradle-git-publish:2.1.1'
  // 3rd party plugins
  compile 'com.diffplug.spotless:spotless-plugin-gradle:3.23.0'
  runtime "gradle.plugin.com.github.erdi:idea-gradle-plugins:2.1"
  runtime "gradle.plugin.com.palantir.configurationresolver:gradle-configuration-resolver-plugin:0.2.0"
  compile "com.adarshr:gradle-test-logger-plugin:1.6.0"

  compile 'org.shipkit:shipkit:2.2.5'
  compile 'org.yaml:snakeyaml:1.23'
  //runtime 'com.netflix.nebula:gradle-lint-plugin:+'
  compile 'net.sf.corn:corn-cps:1.0.1'

  testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
    exclude module: "groovy-all"
  }
  testCompile 'info.solidsoft.spock:spock-global-unroll:0.5.1'    //automatically unroll Spock tests (if appropriate)
  testCompile "net.bytebuddy:byte-buddy:1.7.1"
  testCompile "org.objenesis:objenesis:2.5"
  testCompile "commons-lang:commons-lang:2.4"
  testCompile gradleTestKit()
}

//if its a CI we need to get the gradle plugin credentials
if(!findProperty('gradle.publish.key')) ext['gradle.publish.key'] = System.getenv('GRADLE_PUBLISH_KEY')
if(!findProperty('gradle.publish.secret')) ext['gradle.publish.secret'] = System.getenv('GRADLE_PUBLISH_SECRET')

def defTags = ['grails', 'groovy', 'shipkit', 'spotless', 'circleCI', 'continuous delivery', 'release', 'defaults', 'codenarc',
               'mkdocs', 'markdown', 'documentation']

gradlePlugin {
  plugins {
    defaultsPlugin {
      id = 'yakworks.defaults'
      implementationClass = 'yakworks.gradle.DefaultsPlugin'
      displayName = 'Yakworks Defaults'
      description = 'Yakworks opinionated defaults used for our Groovy, Grails and Gradle projects. Setup defauls for codenarc, spotless '
      //tags = defTags
    }
    grailsPlugin {
      id = 'yakworks.grails-plugin'
      implementationClass = 'yakworks.gradle.shipkit.GrailsPlugin'
      displayName = 'Yakworks Grails Plugin'
      description = 'Marks and sets up defaults and publishing (shipkit) for grails plugins. applies shipkit and circleCI settings '
      //tags = defTags
    }
    grailsWebPlugin {
      id = 'yakworks.grails-web'
      implementationClass = 'yakworks.gradle.shipkit.GrailsWebPlugin'
      displayName = 'Yakworks Grails Web'
      description = 'For grails web apps. setups for shipping and also applies the war and org.grails.web-app. can publish wars to maven'
      //tags = defTags
    }
    groovyLibPlugin {
      id = 'yakworks.groovy-lib'
      implementationClass = 'yakworks.gradle.shipkit.GroovyLibPlugin'
      displayName = 'Yakworks Groovy Library'
      description = 'plugin to setup and release a project as a groovy library.'
      //tags = defTags
    }
    gradlePluginPlugin {
      id = 'yakworks.gradle-plugin'
      implementationClass = 'yakworks.gradle.shipkit.GradlePluginPlugin'
      displayName = 'ShipYak Gradle Plugin'
      description = 'Wrapper around shipkit.gradle-plugin to use defaults and CircleCI'
      //tags = defTags
    }
    shipyakPlugin {
      id = 'yakworks.shipyak'
      implementationClass = 'yakworks.gradle.shipkit.ShipYakRootPlugin'
      displayName = 'ShipYak Root Project'
      description = 'ShipYak Root Project, Does the defaults to get ShipYak and ShipKit setup. Usually you would apply one of the others but if multi-project then put this on the root'
      //tags = defTags
    }
//    shipkitPlugin { //DEPRECATED
//      id = 'yakworks.shipkit'
//      implementationClass = 'yakworks.gradle.shipkit.ShipkitPlugin'
//      displayName = 'DEPRECATED'
//      description = 'DEPRECATED use yakworks.shipyak'
//      //tags = defTags
//    }
    yamlConfigPlugin {
      id = 'yakworks.yaml-config'
      implementationClass = 'yakworks.gradle.config.YamlConfigPlugin'
      displayName = 'Yakworks Yaml Config'
      description = 'Use a YAML file to setup config for gradle builds'
      //tags = defTags
    }
  }
}

pluginBundle {
  website = 'https://github.com/yakworks/gradle-plugins'
  vcsUrl = 'https://github.com/yakworks/gradle-plugins.git'
  //description = 'Plugin providing opinionated defaults and shipkit setup for Groovy, Grails and Gradle library/plugin projects. ' +
  //  'Enables hooks for automated releases and versioning and tags with CircleCI. Yaml config properties'
  tags = defTags
  mavenCoordinates {
    groupId = project.group
    artifactId = project.name
    version = project.version
  }
}

wrapper {
  gradleVersion = '4.10.3'
}

// spotless.formats.groovy.target 'src/main/groovy/**/*.groovy'
// gradleLint.excludedRules = ['transitive-duplicate-dependency-class']

tasks.create('foo'){
  doLast{
    println "GOT IT"
  }
}
